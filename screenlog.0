[?2004h(venv) [01;32mkmdl@kmdl[00m:[01;34m~/siyuanch/workspace/Kimera-VIO[00m$ sudo docker build --rm -t kimera_vio -f ./scripts/docker/Dockerfile .
[?2004l[sudo] password for kmdl: 
[1A[1B[0G[?25l[+] Building 0.0s (0/1)                                                                                           docker:default
[?25h[1A[0G[?25l[+] Building 0.2s (1/2)                                                                                           docker:default
[34m => [internal] load build definition from Dockerfile                                                                        0.0s
[0m[34m => => transferring dockerfile: 2.43kB                                                                                      0.0s
[0m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.2s
[?25h[1A[1A[1A[1A[0G[?25l[+] Building 0.3s (2/2)                                                                                           docker:default
[34m => [internal] load build definition from Dockerfile                                                                        0.0s
[0m[34m => => transferring dockerfile: 2.43kB                                                                                      0.0s
[0m[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[?25h[1A[1A[1A[1A[0G[?25l[+] Building 0.4s (6/20)                                                                                          docker:default
[34m => [internal] load build definition from Dockerfile                                                                        0.0s
[0m[34m => => transferring dockerfile: 2.43kB                                                                                      0.0s
[0m[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 0.6s (19/20)                                                                                         docker:default
[34m => [internal] load build definition from Dockerfile                                                                        0.0s
[0m[34m => => transferring dockerfile: 2.43kB                                                                                      0.0s
[0m[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     0.2s
[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 0.7s (19/20)                                                                                         docker:default
[34m => [internal] load build definition from Dockerfile                                                                        0.0s
[0m[34m => => transferring dockerfile: 2.43kB                                                                                      0.0s
[0m[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     0.3s
[2m => => # -- The CXX compiler identification is GNU 9.4.0                                                                        
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 0.9s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     0.4s
[2m => => # -- The CXX compiler identification is GNU 9.4.0                                                                        
[0m[2m => => # -- The C compiler identification is GNU 9.4.0                                                                          
[0m[2m => => # -- Check for working CXX compiler: /usr/bin/c++                                                                        
[0m[2m => => # -- Check for working CXX compiler: /usr/bin/c++ -- works                                                               
[0m[2m => => # -- Detecting CXX compiler ABI info                                                                                     
[0m[2m => => # -- Detecting CXX compiler ABI info - done                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 1.0s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     0.6s
[2m => => # -- Detecting CXX compile features                                                                                      
[0m[2m => => # -- Detecting CXX compile features - done                                                                               
[0m[2m => => # -- Check for working C compiler: /usr/bin/cc                                                                           
[0m[2m => => # -- Check for working C compiler: /usr/bin/cc -- works                                                                  
[0m[2m => => # -- Detecting C compiler ABI info                                                                                       
[0m[2m => => # -- Detecting C compiler ABI info - done                                                                                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 1.2s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     0.8s
[2m => => # -- Detected gflags version: 2.2.2                                                                                      
[0m[2m => => # -- Found Gflags: /usr/include                                                                                          
[0m[2m => => # -- Failed to find installed glog CMake configuration, searching for glog build directories exported with CMake.        
[0m[2m => => # -- Failed to find an installed/exported CMake configuration for glog, will perform search for installed glog components
[0m[2m => => # .                                                                                                                      
[0m[2m => => # -- Found Glog: /usr/include (Required is at least version "0.3.5")                                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 1.3s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     0.9s
[2m => => # -- Failed to find an installed/exported CMake configuration for glog, will perform search for installed glog components
[0m[2m => => # .                                                                                                                      
[0m[2m => => # -- Found Glog: /usr/include (Required is at least version "0.3.5")                                                     
[0m[2m => => # -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found suitable version "1.71.0", minimu
[0m[2m => => # m required is "1.65") found components: serialization system filesystem thread program_options date_time timer chrono r
[0m[2m => => # egex                                                                                                                   
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 1.4s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     1.0s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 1.6s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     1.1s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 1.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     1.3s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 1.9s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     1.4s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 2.0s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     1.6s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 2.2s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     1.7s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 2.3s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     1.9s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 2.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.0s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 2.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.1s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 2.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.3s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 2.8s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.4s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.0s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.6s
[2m => => # -- Found OpenCV: /usr (found version "4.2.0")                                                                          
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- [download 0% complete]                                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.1s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.7s
[2m => => # -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include                                               
[0m[2m => => # -- Downloading vocabulary file from dropbox.                                                                           
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- [download 0% complete]                                                                                              
[0m[2m => => # -- [download 1% complete]                                                                                              
[0m[2m => => # -- [download 2% complete]                                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.2s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.8s
[2m => => # -- [download 4% complete]                                                                                              
[0m[2m => => # -- [download 5% complete]                                                                                              
[0m[2m => => # -- [download 6% complete]                                                                                              
[0m[2m => => # -- [download 7% complete]                                                                                              
[0m[2m => => # -- [download 10% complete]                                                                                             
[0m[2m => => # -- [download 11% complete]                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.3s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     2.9s
[2m => => # -- [download 17% complete]                                                                                             
[0m[2m => => # -- [download 18% complete]                                                                                             
[0m[2m => => # -- [download 19% complete]                                                                                             
[0m[2m => => # -- [download 20% complete]                                                                                             
[0m[2m => => # -- [download 21% complete]                                                                                             
[0m[2m => => # -- [download 22% complete]                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.4s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.0s
[2m => => # -- [download 29% complete]                                                                                             
[0m[2m => => # -- [download 30% complete]                                                                                             
[0m[2m => => # -- [download 32% complete]                                                                                             
[0m[2m => => # -- [download 33% complete]                                                                                             
[0m[2m => => # -- [download 34% complete]                                                                                             
[0m[2m => => # -- [download 35% complete]                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.1s
[2m => => # -- [download 45% complete]                                                                                             
[0m[2m => => # -- [download 46% complete]                                                                                             
[0m[2m => => # -- [download 47% complete]                                                                                             
[0m[2m => => # -- [download 48% complete]                                                                                             
[0m[2m => => # -- [download 49% complete]                                                                                             
[0m[2m => => # -- [download 50% complete]                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.6s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.2s
[2m => => # -- [download 59% complete]                                                                                             
[0m[2m => => # -- [download 60% complete]                                                                                             
[0m[2m => => # -- [download 61% complete]                                                                                             
[0m[2m => => # -- [download 62% complete]                                                                                             
[0m[2m => => # -- [download 64% complete]                                                                                             
[0m[2m => => # -- [download 65% complete]                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.3s
[2m => => # -- [download 75% complete]                                                                                             
[0m[2m => => # -- [download 77% complete]                                                                                             
[0m[2m => => # -- [download 78% complete]                                                                                             
[0m[2m => => # -- [download 79% complete]                                                                                             
[0m[2m => => # -- [download 80% complete]                                                                                             
[0m[2m => => # -- [download 83% complete]                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 3.8s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.4s
[2m => => # -- [download 91% complete]                                                                                             
[0m[2m => => # -- [download 92% complete]                                                                                             
[0m[2m => => # -- [download 93% complete]                                                                                             
[0m[2m => => # -- [download 94% complete]                                                                                             
[0m[2m => => # -- [download 95% complete]                                                                                             
[0m[2m => => # -- [download 96% complete]                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.0s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.6s
[2m => => # -- [download 95% complete]                                                                                             
[0m[2m => => # -- [download 96% complete]                                                                                             
[0m[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.2s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.7s
[2m => => # -- [download 95% complete]                                                                                             
[0m[2m => => # -- [download 96% complete]                                                                                             
[0m[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.3s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     3.9s
[2m => => # -- [download 95% complete]                                                                                             
[0m[2m => => # -- [download 96% complete]                                                                                             
[0m[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.0s
[2m => => # -- [download 95% complete]                                                                                             
[0m[2m => => # -- [download 96% complete]                                                                                             
[0m[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.1s
[2m => => # -- [download 96% complete]                                                                                             
[0m[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.3s
[2m => => # -- [download 96% complete]                                                                                             
[0m[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.8s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.4s
[2m => => # -- [download 96% complete]                                                                                             
[0m[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 4.9s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.5s
[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 5.1s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.7s
[2m => => # -- [download 98% complete]                                                                                             
[0m[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 5.1s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 5.2s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     4.8s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 5.4s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     5.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 5.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     5.1s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 5.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     5.3s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 5.8s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     5.4s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 6.0s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     5.6s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 6.1s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     5.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 6.3s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     5.9s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 6.4s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     6.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 6.6s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     6.2s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 6.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     6.3s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 6.9s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     6.5s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 7.0s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     6.6s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 7.2s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     6.8s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 7.3s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     6.9s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 7.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     7.1s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 7.6s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     7.2s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 7.8s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     7.4s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 7.9s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     7.5s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 8.1s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     7.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 8.2s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     7.8s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 8.4s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     8.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 8.5s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     8.1s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 8.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     8.3s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 8.8s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     8.4s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 9.0s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     8.6s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 9.1s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     8.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 9.3s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     8.9s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 9.4s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     9.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 9.6s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     9.2s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 9.7s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     9.3s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 9.9s (19/20)                                                                                         docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     9.5s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 10.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     9.6s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 10.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     9.8s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 10.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                     9.9s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 10.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    10.1s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 10.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    10.2s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 10.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    10.4s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 10.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    10.5s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 11.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    10.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 11.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    10.8s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 11.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    11.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 11.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    11.1s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 11.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    11.3s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 11.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    11.4s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 12.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    11.6s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 12.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    11.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 12.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    11.9s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 12.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    12.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 12.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    12.2s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 12.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    12.3s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 12.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    12.5s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 13.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    12.6s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 13.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    12.8s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 13.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    12.9s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 13.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    13.1s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 13.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    13.2s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 13.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    13.4s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 13.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    13.5s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 14.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    13.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 14.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    13.8s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 14.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    14.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 14.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    14.1s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 14.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    14.3s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 14.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    14.4s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 15.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    14.6s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 15.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    14.7s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 15.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    14.9s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 15.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.0s
[2m => => # -- [download 99% complete]                                                                                             
[0m[2m => => # -- [download 100% complete]                                                                                            
[0m[2m => => # -- Unzipping vocabulary file.                                                                                          
[0m[2m => => # -- Moving vocabulary file.                                                                                             
[0m[2m => => # -- Pangolin not found.                                                                                                 
[0m[2m => => # Cloning into 'googletest-src'...                                                                                       
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 15.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.1s
[2m => => # do so (now or later) by using -c with the switch command. Example:                                                     
[0m[2m => => #   git switch -c <new-branch-name>                                                                                      
[0m[2m => => # Or undo this operation with:                                                                                           
[0m[2m => => #   git switch -                                                                                                         
[0m[2m => => # Turn off this advice by setting config variable advice.detachedHead to false                                           
[0m[2m => => # HEAD is now at 703bd9ca Googletest export                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 15.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.2s
[2m => => # do so (now or later) by using -c with the switch command. Example:                                                     
[0m[2m => => #   git switch -c <new-branch-name>                                                                                      
[0m[2m => => # Or undo this operation with:                                                                                           
[0m[2m => => #   git switch -                                                                                                         
[0m[2m => => # Turn off this advice by setting config variable advice.detachedHead to false                                           
[0m[2m => => # HEAD is now at 703bd9ca Googletest export                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 15.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.4s
[2m => => # do so (now or later) by using -c with the switch command. Example:                                                     
[0m[2m => => #   git switch -c <new-branch-name>                                                                                      
[0m[2m => => # Or undo this operation with:                                                                                           
[0m[2m => => #   git switch -                                                                                                         
[0m[2m => => # Turn off this advice by setting config variable advice.detachedHead to false                                           
[0m[2m => => # HEAD is now at 703bd9ca Googletest export                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.5s
[2m => => # do so (now or later) by using -c with the switch command. Example:                                                     
[0m[2m => => #   git switch -c <new-branch-name>                                                                                      
[0m[2m => => # Or undo this operation with:                                                                                           
[0m[2m => => #   git switch -                                                                                                         
[0m[2m => => # Turn off this advice by setting config variable advice.detachedHead to false                                           
[0m[2m => => # HEAD is now at 703bd9ca Googletest export                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.6s
[2m => => #   git switch -c <new-branch-name>                                                                                      
[0m[2m => => # Or undo this operation with:                                                                                           
[0m[2m => => #   git switch -                                                                                                         
[0m[2m => => # Turn off this advice by setting config variable advice.detachedHead to false                                           
[0m[2m => => # HEAD is now at 703bd9ca Googletest export                                                                              
[0m[2m => => # -- Found PythonInterp: /usr/bin/python3.8 (found version "3.8.10")                                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.7s
[2m => => # -- Build flags                                                                                                         
[0m[2m => => # --   Build type                              : Release                                                                 
[0m[2m => => # --   C compilation flags (Release)           :  -O3 -DNDEBUG                                                           
[0m[2m => => # --   C++ compilation flags (Release)         :  -O3 -DNDEBUG                                                           
[0m[2m => => # -- Configuring done                                                                                                    
[0m[2m => => # -- Generating done                                                                                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    15.9s
[2m => => # -- Generating done                                                                                                     
[0m[2m => => # -- Build files have been written to: /root/Kimera-VIO/build                                                            
[0m[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    16.0s
[2m => => # -- Generating done                                                                                                     
[0m[2m => => # -- Build files have been written to: /root/Kimera-VIO/build                                                            
[0m[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    16.2s
[2m => => # -- Generating done                                                                                                     
[0m[2m => => # -- Build files have been written to: /root/Kimera-VIO/build                                                            
[0m[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    16.3s
[2m => => # -- Generating done                                                                                                     
[0m[2m => => # -- Build files have been written to: /root/Kimera-VIO/build                                                            
[0m[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 16.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    16.5s
[2m => => # -- Generating done                                                                                                     
[0m[2m => => # -- Build files have been written to: /root/Kimera-VIO/build                                                            
[0m[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 17.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    16.6s
[2m => => # -- Generating done                                                                                                     
[0m[2m => => # -- Build files have been written to: /root/Kimera-VIO/build                                                            
[0m[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 17.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    16.7s
[2m => => # -- Build files have been written to: /root/Kimera-VIO/build                                                            
[0m[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[2m => => # [  3%] Linking C static library libtriangle.a                                                                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 17.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    16.9s
[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[2m => => # [  3%] Linking C static library libtriangle.a                                                                          
[0m[2m => => # [  3%] Built target triangle                                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 17.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    17.0s
[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[2m => => # [  3%] Linking C static library libtriangle.a                                                                          
[0m[2m => => # [  3%] Built target triangle                                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 17.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    17.2s
[2m => => # Scanning dependencies of target triangle                                                                               
[0m[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[2m => => # [  3%] Linking C static library libtriangle.a                                                                          
[0m[2m => => # [  3%] Built target triangle                                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 17.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    17.3s
[2m => => # Scanning dependencies of target gtest                                                                                  
[0m[2m => => # [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o                                 
[0m[2m => => # [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o                
[0m[2m => => # [  3%] Linking C static library libtriangle.a                                                                          
[0m[2m => => # [  3%] Built target triangle                                                                                           
[0m[2m => => # Scanning dependencies of target kimera_vio                                                                             
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 17.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    17.5s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 18.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    17.6s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 18.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    17.8s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 18.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    17.9s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 18.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    18.1s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 18.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    18.2s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 18.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    18.4s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 18.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    18.5s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 19.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    18.7s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 19.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    18.8s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 19.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    19.0s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 19.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    19.1s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 19.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    19.3s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 19.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    19.4s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 20.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    19.6s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 20.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    19.7s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 20.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    19.9s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 20.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    20.0s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 20.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    20.2s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 20.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    20.3s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 20.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    20.5s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 21.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    20.6s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 21.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    20.8s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 21.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    20.9s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 21.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    21.1s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 21.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    21.2s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 21.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    21.4s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 21.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    21.5s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 22.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    21.7s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o                                   
[0m[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 22.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    21.8s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 22.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    21.9s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 22.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    22.1s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 22.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    22.2s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 22.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    22.4s
[2m => => # [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 22.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    22.4s
[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o                              
[0m[2m => => # [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o                                     
[0m[2m => => # [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 23.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    22.7s
[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 23.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    22.8s
[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 23.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.0s
[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 23.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.1s
[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 23.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.3s
[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o                                 
[0m[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 23.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.4s
[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.6s
[2m => => # [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o                                     
[0m[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.6s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.8s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    23.9s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    24.1s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    24.2s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    24.4s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 24.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    24.5s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 25.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    24.7s
[2m => => # [ 13%] Linking CXX static library ../../../lib/libgtest.a                                                              
[0m[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 25.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    24.7s
[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 25.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    24.9s
[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 25.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    25.0s
[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 25.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    25.2s
[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 25.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    25.3s
[2m => => # [ 13%] Built target gtest                                                                                              
[0m[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 25.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    25.4s
[2m => => # Scanning dependencies of target gmock                                                                                  
[0m[2m => => # [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o                
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 26.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    25.6s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o                                      
[0m[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 26.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    25.7s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 26.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    25.9s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 26.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    26.0s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 26.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    26.2s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 26.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    26.3s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 26.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    26.5s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 27.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    26.6s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 27.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    26.8s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 27.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    26.9s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 27.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    27.1s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 27.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    27.2s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 27.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    27.4s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 27.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    27.5s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 28.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    27.7s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 28.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    27.8s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 28.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    28.0s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 28.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    28.1s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 28.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    28.3s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 28.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    28.4s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 29.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    28.6s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 29.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    28.7s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 29.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    28.9s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 29.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    29.0s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 29.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    29.2s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 29.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    29.3s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 29.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    29.5s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 30.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    29.6s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 30.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    29.8s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 30.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    29.9s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 30.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    30.1s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 30.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    30.2s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 30.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    30.4s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 30.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    30.5s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 31.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    30.7s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 31.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    30.8s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 31.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    31.0s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 31.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    31.1s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 31.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    31.3s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 31.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    31.4s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 32.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    31.6s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 32.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    31.7s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 32.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    31.9s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 32.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    32.0s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 32.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    32.2s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 32.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    32.3s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 32.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    32.5s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 33.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    32.6s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 33.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    32.8s
[2m => => # [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o                              
[0m[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 33.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    32.8s
[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 33.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    33.0s
[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 33.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    33.1s
[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 33.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    33.3s
[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 33.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    33.4s
[2m => => # [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o                          
[0m[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 34.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    33.6s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 34.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    33.7s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 34.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    33.9s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 34.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    34.0s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 34.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    34.2s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 34.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    34.3s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 34.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    34.5s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 35.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    34.6s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 35.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    34.8s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 35.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    34.9s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 35.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    35.1s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 35.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    35.2s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 35.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    35.4s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 35.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    35.5s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 36.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    35.7s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 36.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    35.8s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 36.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    36.0s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 36.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    36.1s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 36.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    36.3s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 36.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    36.4s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 37.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    36.6s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 37.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    36.7s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 37.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    36.9s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 37.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    37.0s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 37.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    37.2s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 37.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    37.3s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 37.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    37.5s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 38.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    37.6s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 38.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    37.8s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 38.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    37.9s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 38.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    38.1s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 38.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    38.2s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 38.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    38.4s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 38.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    38.5s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 39.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    38.7s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 39.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    38.8s
[2m => => # [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o                                   
[0m[2m => => # [ 17%] Linking CXX static library ../../../lib/libgmock.a                                                              
[0m[2m => => # [ 17%] Built target gmock                                                                                              
[0m[2m => => # [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o                                    
[0m[2m => => # [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o                            
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 39.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    38.9s
[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o                                  
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp: In member function 'void VIO::StereoMatcher::denseStereoReconstruction
[0m[2m => => # (const cv::Mat&, const cv::Mat&, cv::Mat*)':                                                                           
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:93:27: error: 'utils' has not been declared                            
[0m[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 39.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    39.0s
[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:93:27: error: 'utils' has not been declared                            
[0m[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 39.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    39.1s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 39.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    39.2s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 39.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    39.4s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    39.5s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    39.7s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    39.8s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.0s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.1s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.3s
[2m => => #    93 |   auto tic_stereo_match = utils::Timer::tic();                                                                 
[0m[2m => => #       |                           ^~~~~                                                                                
[0m[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.3s
[2m => => # /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared                            
[0m[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 40.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.5s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 41.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.6s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 41.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.8s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 41.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    40.9s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 41.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    41.1s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 41.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    41.2s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 41.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    41.4s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 41.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    41.5s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 42.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    41.7s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 42.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    41.8s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 42.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    42.0s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 42.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    42.1s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 42.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    42.3s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 42.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    42.4s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 43.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    42.6s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 43.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    42.7s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 43.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    42.9s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 43.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    43.0s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 43.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    43.2s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 43.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    43.3s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 43.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    43.5s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 44.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    43.6s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 44.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    43.8s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 44.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    43.9s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 44.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    44.1s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 44.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    44.2s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 44.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    44.4s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 44.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    44.5s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 45.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    44.7s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 45.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    44.8s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 45.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    45.0s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 45.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    45.1s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 45.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    45.3s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 45.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    45.4s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 46.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    45.6s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 46.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    45.7s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 46.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    45.9s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 46.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    46.0s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 46.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    46.2s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 46.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    46.3s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 46.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    46.5s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 47.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    46.6s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 47.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    46.8s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 47.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    46.9s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 47.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    47.1s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 47.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    47.2s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 47.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    47.4s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 47.9s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    47.5s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 48.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    47.7s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 48.2s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    47.8s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 48.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    48.0s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 48.5s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    48.1s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 48.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    48.3s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 48.8s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    48.4s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 49.0s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    48.6s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 49.1s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    48.7s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 49.3s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    48.9s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 49.4s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    49.0s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 49.6s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    49.2s
[2m => => #    97 |               << utils::Timer::toc(tic_stereo_match);                                                          
[0m[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 49.7s (19/20)                                                                                        docker:default
[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m => [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                                    49.2s
[2m => => #       |                  ^~~~~                                                                                         
[0m[2m => => # [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o                           
[0m[2m => => # make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Err
[0m[2m => => # or 1                                                                                                                   
[0m[2m => => # make[2]: *** Waiting for unfinished jobs....                                                                           
[0m[2m => => # make[1]: *** [CMakeFiles/Makefile2:1451: CMakeFiles/kimera_vio.dir/all] Error 2                                        
[0m[?25h[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[1A[0G[?25l[+] Building 49.7s (20/20) FINISHED                                                                               docker:default
[34m => [internal] load build definition from Dockerfile                                                                        0.0s
[0m[34m => => transferring dockerfile: 2.43kB                                                                                      0.0s
[0m[34m => [internal] load metadata for docker.io/library/ubuntu:20.04                                                             0.3s
[0m[34m => [internal] load .dockerignore                                                                                           0.0s
[0m[34m => => transferring context: 2B                                                                                             0.0s
[0m[34m => https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master                                                0.1s
[0m[34m => [internal] load build context                                                                                           0.0s
[0m[34m => => transferring context: 74B                                                                                            0.0s
[0m[34m => [ 1/15] FROM docker.io/library/ubuntu:20.04@sha256:bb1c41682308d7040f74d103022816d41c50d7b0c89e9d706a74b4e548636e54     0.0s
[0m[34m => CACHED [ 2/15] WORKDIR /root/                                                                                           0.0s
[0m[34m => CACHED [ 3/15] RUN apt-get update && apt-get install -y --no-install-recommends apt-utils                               0.0s
[0m[34m => CACHED [ 4/15] RUN apt-get update &&       apt-get install -y       build-essential       cmake       vim       gfortr  0.0s
[0m[34m => CACHED [ 5/15] RUN git clone https://github.com/borglab/gtsam.git &&       cd gtsam &&       git checkout 4.2 &&        0.0s
[0m[34m => CACHED [ 6/15] RUN git clone https://github.com/marcusabate/opengv &&       cd opengv &&       git apply march_native_  0.0s
[0m[34m => CACHED [ 7/15] COPY .patches/fix_vocab.patch dbow2.patch                                                                0.0s
[0m[34m => CACHED [ 8/15] RUN git clone https://github.com/dorian3d/DBoW2.git                                                      0.0s
[0m[34m => CACHED [ 9/15] RUN cd DBoW2 &&       git apply ../dbow2.patch &&       mkdir build &&       cd build &&       cmake ..  0.0s
[0m[34m => CACHED [10/15] ADD https://api.github.com/repos/MIT-SPARK/Kimera-RPGO/git/refs/heads/master version.json                0.0s
[0m[34m => CACHED [11/15] RUN git clone https://github.com/MIT-SPARK/Kimera-RPGO.git                                               0.0s
[0m[34m => CACHED [12/15] RUN cd Kimera-RPGO &&       mkdir build &&       cd build &&       cmake .. &&       make -j$(nproc) in  0.0s
[0m[34m => CACHED [13/15] RUN pwd                                                                                                  0.0s
[0m[34m => CACHED [14/15] RUN git clone https://github.com/chensy7/Kimera-VIO.git                                                  0.0s
[0m[31m => ERROR [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)                              49.3s
[0m                                                                                                                                 
                                                                                                                                 
                                                                                                                                 
                                                                                                                                 
[4A[0G[?25h------
 > [15/15] RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc):
0.290 -- The CXX compiler identification is GNU 9.4.0
0.322 -- The C compiler identification is GNU 9.4.0
0.325 -- Check for working CXX compiler: /usr/bin/c++
0.385 -- Check for working CXX compiler: /usr/bin/c++ -- works
0.386 -- Detecting CXX compiler ABI info
0.449 -- Detecting CXX compiler ABI info - done
0.458 -- Detecting CXX compile features
0.459 -- Detecting CXX compile features - done
0.461 -- Check for working C compiler: /usr/bin/cc
0.517 -- Check for working C compiler: /usr/bin/cc -- works
0.518 -- Detecting C compiler ABI info
0.574 -- Detecting C compiler ABI info - done
0.584 -- Detecting C compile features
0.584 -- Detecting C compile features - done
0.585 -- ==============================================================
0.585 -- ====================  Dependencies ===========================
0.588 -- Found installed version of gflags: /usr/lib/x86_64-linux-gnu/cmake/gflags
0.588 -- Detected gflags version: 2.2.2
0.589 -- Found Gflags: /usr/include  
0.600 -- Failed to find installed glog CMake configuration, searching for glog build directories exported with CMake.
0.608 -- Failed to find an installed/exported CMake configuration for glog, will perform search for installed glog components.
0.614 -- Found Glog: /usr/include (Required is at least version "0.3.5") 
0.854 -- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found suitable version "1.71.0", minimum required is "1.65") found components: serialization system filesystem thread program_options date_time timer chrono regex 
0.857 -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include
0.868 -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include
0.882 -- Found OpenCV: /usr (found version "4.2.0") 
0.890 -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include
0.896 -- GTSAM include directory:  /usr/local/lib/cmake/GTSAM/../../../include
0.999 -- Downloading vocabulary file from dropbox.
2.107 -- [download 100% complete]
2.553 -- [download 0% complete]
2.618 -- [download 1% complete]
2.653 -- [download 2% complete]
2.664 -- [download 3% complete]
2.684 -- [download 4% complete]
2.697 -- [download 5% complete]
2.708 -- [download 6% complete]
2.727 -- [download 7% complete]
2.734 -- [download 10% complete]
2.759 -- [download 11% complete]
2.795 -- [download 14% complete]
2.796 -- [download 15% complete]
2.821 -- [download 16% complete]
2.826 -- [download 17% complete]
2.831 -- [download 18% complete]
2.835 -- [download 19% complete]
2.839 -- [download 20% complete]
2.845 -- [download 21% complete]
2.865 -- [download 22% complete]
2.867 -- [download 23% complete]
2.872 -- [download 24% complete]
2.878 -- [download 25% complete]
2.883 -- [download 26% complete]
2.902 -- [download 27% complete]
2.908 -- [download 28% complete]
2.913 -- [download 29% complete]
2.916 -- [download 30% complete]
2.938 -- [download 32% complete]
2.943 -- [download 33% complete]
2.948 -- [download 34% complete]
2.970 -- [download 35% complete]
2.976 -- [download 36% complete]
2.980 -- [download 37% complete]
2.984 -- [download 38% complete]
2.988 -- [download 39% complete]
3.010 -- [download 42% complete]
3.020 -- [download 43% complete]
3.027 -- [download 44% complete]
3.032 -- [download 45% complete]
3.041 -- [download 46% complete]
3.045 -- [download 47% complete]
3.052 -- [download 48% complete]
3.062 -- [download 49% complete]
3.075 -- [download 50% complete]
3.079 -- [download 51% complete]
3.083 -- [download 52% complete]
3.089 -- [download 53% complete]
3.093 -- [download 54% complete]
3.113 -- [download 55% complete]
3.117 -- [download 56% complete]
3.120 -- [download 57% complete]
3.126 -- [download 58% complete]
3.129 -- [download 59% complete]
3.150 -- [download 60% complete]
3.154 -- [download 61% complete]
3.159 -- [download 62% complete]
3.163 -- [download 64% complete]
3.188 -- [download 65% complete]
3.192 -- [download 66% complete]
3.197 -- [download 67% complete]
3.200 -- [download 68% complete]
3.203 -- [download 69% complete]
3.210 -- [download 70% complete]
3.216 -- [download 71% complete]
3.235 -- [download 72% complete]
3.239 -- [download 73% complete]
3.242 -- [download 74% complete]
3.247 -- [download 75% complete]
3.253 -- [download 77% complete]
3.274 -- [download 78% complete]
3.282 -- [download 79% complete]
3.286 -- [download 80% complete]
3.307 -- [download 83% complete]
3.317 -- [download 84% complete]
3.339 -- [download 85% complete]
3.342 -- [download 86% complete]
3.350 -- [download 87% complete]
3.359 -- [download 88% complete]
3.361 -- [download 89% complete]
3.366 -- [download 90% complete]
3.377 -- [download 91% complete]
3.389 -- [download 92% complete]
3.392 -- [download 93% complete]
3.397 -- [download 94% complete]
3.401 -- [download 95% complete]
3.409 -- [download 96% complete]
3.424 -- [download 98% complete]
3.429 -- [download 99% complete]
3.437 -- [download 100% complete]
3.441 -- Unzipping vocabulary file.
4.133 -- Moving vocabulary file.
4.518 -- Pangolin not found.
4.672 Cloning into 'googletest-src'...
15.09 Note: switching to 'v1.10.x'.
15.09 
15.09 You are in 'detached HEAD' state. You can look around, make experimental
15.09 changes and commit them, and you can discard any commits you make in this
15.09 state without impacting any branches by switching back to a branch.
15.09 
15.09 If you want to create a new branch to retain commits you create, you may
15.09 do so (now or later) by using -c with the switch command. Example:
15.09 
15.09   git switch -c <new-branch-name>
15.09 
15.09 Or undo this operation with:
15.09 
15.09   git switch -
15.09 
15.09 Turn off this advice by setting config variable advice.detachedHead to false
15.09 
15.09 HEAD is now at 703bd9ca Googletest export
15.55 -- Found PythonInterp: /usr/bin/python3.8 (found version "3.8.10") 
15.55 -- Found Threads: TRUE  
15.57 -- ===============================================================
15.57 -- ================  Configuration Options  ======================
15.57 -- CMAKE_CXX_COMPILER_ID type                : GNU
15.57 -- CMAKE_CXX_COMPILER_VERSION                : 9.4.0
15.57 -- Build flags                                               
15.57 --   Build type                              : Release
15.57 --   C compilation flags (Release)           :  -O3 -DNDEBUG
15.57 --   C++ compilation flags (Release)         :  -O3 -DNDEBUG
15.58 -- Configuring done
15.65 -- Generating done
15.66 -- Build files have been written to: /root/Kimera-VIO/build
15.70 Scanning dependencies of target triangle
15.70 Scanning dependencies of target gtest
15.71 [  1%] Building C object third_party/triangle/CMakeFiles/triangle.dir/src/triangle.c.o
15.71 [  2%] Building CXX object external/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o
16.68 [  3%] Linking C static library libtriangle.a
16.71 [  3%] Built target triangle
17.25 Scanning dependencies of target kimera_vio
17.31 [  4%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/DataProviderInterface-definitions.cpp.o
17.31 [  6%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/RgbdDataProviderModule.cpp.o
17.31 [  7%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/StereoDataProviderModule.cpp.o
17.31 [  7%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/DataProviderInterface.cpp.o
17.31 [  7%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/MonoDataProviderModule.cpp.o
17.31 [  7%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/DataProviderModule.cpp.o
17.31 [  8%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/EurocDataProvider.cpp.o
17.31 [  8%] Building CXX object CMakeFiles/kimera_vio.dir/src/dataprovider/KittiDataProvider.cpp.o
17.31 [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/Camera.cpp.o
17.31 [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/CameraParams.cpp.o
17.31 [  9%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoImuSyncPacket.cpp.o
17.31 [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/playground/EurocPlayground.cpp.o
17.31 [ 11%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/DepthFrame.cpp.o
17.31 [ 12%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/MonoVisionImuFrontend.cpp.o
17.31 [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/OdometryParams.cpp.o
21.79 [ 13%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdCamera.cpp.o
22.44 [ 13%] Linking CXX static library ../../../lib/libgtest.a
22.50 [ 13%] Built target gtest
22.53 Scanning dependencies of target gmock
22.54 [ 13%] Building CXX object external/googletest-build/googlemock/CMakeFiles/gmock.dir/src/gmock-all.cc.o
23.41 [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdFrame.cpp.o
23.62 [ 14%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdImuSyncPacket.cpp.o
24.74 [ 15%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/RgbdVisionImuFrontend.cpp.o
25.44 [ 16%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoCamera.cpp.o
25.50 [ 17%] Linking CXX static library ../../../lib/libgmock.a
25.55 [ 17%] Built target gmock
25.56 [ 17%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoFrame.cpp.o
32.84 [ 18%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoImuSyncPacket.cpp.o
33.57 [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o
38.86 /root/Kimera-VIO/src/frontend/StereoMatcher.cpp: In member function 'void VIO::StereoMatcher::denseStereoReconstruction(const cv::Mat&, const cv::Mat&, cv::Mat*)':
38.86 /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:93:27: error: 'utils' has not been declared
38.86    93 |   auto tic_stereo_match = utils::Timer::tic();
38.86       |                           ^~~~~
38.86 /root/Kimera-VIO/src/frontend/StereoMatcher.cpp:97:18: error: 'utils' has not been declared
38.86    97 |               << utils::Timer::toc(tic_stereo_match);
38.86       |                  ^~~~~
39.09 [ 19%] Building CXX object CMakeFiles/kimera_vio.dir/src/frontend/StereoMatchingParams.cpp.o
40.31 make[2]: *** [CMakeFiles/kimera_vio.dir/build.make:349: CMakeFiles/kimera_vio.dir/src/frontend/StereoMatcher.cpp.o] Error 1
40.31 make[2]: *** Waiting for unfinished jobs....
49.24 make[1]: *** [CMakeFiles/Makefile2:1451: CMakeFiles/kimera_vio.dir/all] Error 2
49.24 make: *** [Makefile:141: all] Error 2
------
Dockerfile:88
--------------------
  86 |     RUN pwd
  87 |     RUN git clone https://github.com/chensy7/Kimera-VIO.git
  88 | >>> RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)
  89 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)" did not complete successfully: exit code: 2
[?2004h(venv) [01;32mkmdl@kmdl[00m:[01;34m~/siyuanch/workspace/Kimera-VIO[00m$ [?2004l
exit
